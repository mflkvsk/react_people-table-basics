{"version":3,"sources":["Components/HomePage.tsx","Components/Navigation.tsx","Components/NotFoundPage.tsx","Components/api/api.ts","Components/PersonRow.tsx","Components/PeopleTable.tsx","Components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Navigation","to","navData","classNames","isActive","NotFoundPage","getPeople","a","fetch","response","ok","Promise","reject","Error","json","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","slug","PeoplePage","useState","setPeople","useEffect","loadPeople","peopleFromServer","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"uOAGaA,EAAqB,kBAChC,oBAAIC,UAAU,8BAAd,wB,iBCCWC,EAAuB,kBAClC,wBAAQD,UAAU,SAAlB,SACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CACEE,GAAG,IACHF,UAAW,SAACG,GAAD,OAAcC,IACvB,cACA,CAAE,YAAaD,EAAQE,YAJ3B,kBAUA,cAAC,IAAD,CACEH,GAAG,UACHF,UAAW,SAACG,GAAD,OAAcC,IACvB,cACA,CAAE,YAAaD,EAAQE,YAJ3B,+BChBOC,EAAyB,kBACpC,iD,8BCAWC,EAAS,uCAAG,4BAAAC,EAAA,sEACAC,MAHT,qEAES,WACjBC,EADiB,QAGTC,GAHS,yCAIdC,QAAQC,OAAO,IAAIC,MAAM,yBAJX,gCAOhBJ,EAASK,QAPO,2CAAH,qDCGTC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,+BACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,iBCNHC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,mCACE,wBAAOzB,UAAU,kCAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGyB,EAAOC,KAAI,SAAAT,GAAM,OAChB,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOU,iBClBtCC,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeK,EAAf,KAYA,OAVAC,qBAAU,WACR,IAAMC,EAAU,uCAAG,4BAAAxB,EAAA,sEACcD,IADd,OACX0B,EADW,OAGjBH,EAAUG,GAHO,2CAAH,qDAMhBD,MACC,IAGD,qCACE,oBAAIhC,UAAU,8BAAd,yBACA,cAAC,EAAD,CAAayB,OAAQA,QCCZS,EAbO,kBACpB,sBAAKlC,UAAU,MAAf,UACE,oBAAIA,UAAU,+BAAd,0BACA,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUlC,GAAG,IAAImC,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,aCZ/BE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7bf89589.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"has-text-centered is-size-3\">Home page</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport classNames from 'classnames';\n\nexport const Navigation: React.FC = () => (\n  <header className=\"navbar\">\n    <nav className=\"navbar-menu\">\n      <NavLink\n        to=\"/\"\n        className={(navData) => (classNames(\n          'navbar-item',\n          { 'is-active': navData.isActive },\n        ))}\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        to=\"/people\"\n        className={(navData) => (classNames(\n          'navbar-item',\n          { 'is-active': navData.isActive },\n        ))}\n      >\n        People page\n      </NavLink>\n    </nav>\n  </header>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1>Page not found</h1>\n);\n","// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const response = await fetch(API_URL);\n\n  if (!response.ok) {\n    return Promise.reject(new Error('Failed to load data'));\n  }\n\n  return response.json();\n};\n","import React from 'react';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <tr>\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.motherName}</td>\n    <td>{person.fatherName}</td>\n  </tr>\n);\n","import React from 'react';\nimport { PersonRow } from './PersonRow';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <>\n      <table className=\"PeopleTable table table-striped\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map(person => (\n            <PersonRow person={person} key={person.slug} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from './api/api';\nimport { PeopleTable } from './PeopleTable';\nimport 'bulma/css/bulma.css';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"has-text-centered is-size-3\">People page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","import React from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './Components/HomePage';\nimport { Navigation } from './Components/Navigation';\nimport { NotFoundPage } from './Components/NotFoundPage';\nimport { PeoplePage } from './Components/PeoplePage';\nimport 'bulma/css/bulma.css';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <h1 className=\"title is-1 has-text-centered\">People table</h1>\n    <Navigation />\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}